name: CI

on:
  push:
    branches: [ dk-action ]
  pull_request:
    branches: [ dk-action ]

jobs:
  goreport:
    name: Refresh-goreport
    runs-on: ubuntu-latest
    steps:
      - uses: creekorful/goreportcard-action@v1.0
  golangci-lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with: 
          version: v1.29
          working-directory: gomanifest
  golint:
    name: go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
      - uses: actions/checkout@v2
      - name: lint
        run: go get -u golang.org/x/lint/golint && golint ./...
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
        matrix:
            version:
                - 1.13
                - 1.14
                - 1.15
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.version }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Check go mod
      run: |
          go mod tidy
          git diff --exit-code go.mod
    - name: Unit Test
      run:  go test -gcflags=-l -v  -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Generate CLI Build
      uses: thatisuday/go-cross-build@v1.1.0
      with:
          platforms: 'linux/amd64, darwin/amd64, windows/amd64'
          name: 'crda'
          dest: 'dist'
